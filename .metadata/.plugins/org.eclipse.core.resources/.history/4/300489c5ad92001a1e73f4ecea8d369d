package com.phptravels.webtesting;

import org.testng.annotations.Test;

import com.relevantcodes.extentreports.LogStatus;

import helper.Commons;

import org.testng.annotations.BeforeTest;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;

import org.apache.commons.io.FileUtils;
import org.apache.commons.io.IOUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;

public class Testcase008 {
	private URL url;
	private HttpURLConnection httpcon;
	private Commons commons;
	
	@Test
	public void testingValidData() throws IOException, IllegalArgumentException{ 
		InputStream in = httpcon.getInputStream();
		String encoding = httpcon.getContentEncoding();
		encoding = encoding == null ? "UTF-8" : encoding;
		String body = IOUtils.toString(in, encoding);
		FileUtils.writeStringToFile(new File("./HTTPResponses/Testcase008.xml"), body);
	}

	@BeforeTest
	public void setup() throws FileNotFoundException, IOException {
		url  = new URL("https://www.phptravels.net/register");
		httpcon = (HttpURLConnection) url.openConnection(); 
		httpcon.addRequestProperty("User-Agent", "Mozilla/4.76"); 
	}

	@AfterMethod(alwaysRun = true)
	public void cleanup(ITestResult testResult) throws IOException {
		commons = new Commons();
		if (testResult.getStatus() == ITestResult.FAILURE) {
			String filename = this.getClass().getSimpleName() + "-" + testResult.getMethod().getMethodName() + "_" + commons.getRandomString(5) + ".png";
			String directory = System.getProperty("user.dir") + "//screenshots//";
			File sourceFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
			FileUtils.copyFile(sourceFile, new File(directory + filename));
			String imagepath = test.addScreenCapture(directory + filename);
			test.log(LogStatus.FAIL, testResult.getMethod().getMethodName(), imagepath);
		}
		else{
			test.log(LogStatus.PASS, testResult.getMethod().getMethodName());
		}
		report.endTest(test);
		report.flush();
		driver.quit();
	}
	
}
